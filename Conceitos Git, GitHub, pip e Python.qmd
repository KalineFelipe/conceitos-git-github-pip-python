---
title: "Conceitos Git, GitHub, pip e Python"
author: "Kaline de Almeida Felipe"
date: "Julho de 2025"
format:
  html:
    theme: default
    toc: true
    page-layout: tufte
    margin-contained: true
execute:
  echo: true
---

# -------------------------
# Parte 1: Introdução

Este trabalho tem como objetivo apresentar alguns conceitos de programação, como o que são e para que servem o Git e o GitHub, além de seus principais comandos. Também serão abordados o gerenciador de pacotes pip — com exemplos de instalação — e conceitos iniciais de Python, incluindo tipos de dados, listas, estruturas de controle, importação de bibliotecas e boas práticas de codificação.

# -------------------------

# Parte 2: O que é Git e GitHub e para que servem

A imagem abaixo mostra a logo do Git e GitHub:

![Logo Git ou GitHub](git-github){width=400px}

## O que é Git:
Git é um sistema de controle de versão distribuído, utilizado para registrar alterações em arquivos de código ao longo do tempo.

## O que é GitHub:
GitHub é um serviço em nuvem, com repositórios remotos que usa o Git como sistema de controle.

## Para que servem o Git e GitHub:
- Hospedar repertórios
- Manter monitorado diferentes versões de um código
- Criar histórico de alterações
- Compartilhar projetos publicamente ou de forma privada

## Podemos usar como exemplo:
- Publicação de aplicativos por desenvolvedores
- Usado como ferramenta para estudo por meio de estudantes
- Criar projetos internos de empresas
# -------------------------

# Parte 3: Comandos básicos do Git (não são executados no Python, mas no terminal):

git init         -> Inicia um novo repositório Git
git add .        -> Adiciona todos os arquivos para controle de versão
git commit -m "" -> Cria um registro das mudanças
git push         -> Envia as alterações para o GitHub
git pull         -> Baixa alterações do GitHub
git clone        -> Copia um repositório do GitHub para sua máquina

# -------------------------

# Parte 4: O que é um repositório e um commit

## O que é um repositório?
É uma pasta do projeto que guarda todo o histórico versionado. 

## O que é um commit?
Um "snapshot" (foto) do estado do seu código com uma mensagem explicativa.
Realizar um commit no Git registra alterações feitas em um ou mais arquivos. Cada commit recebe um identificador único, chamado de SHA ou hash.

# Parte 5: O que é pip?
É um pacote que já vem instalado no Python, o pip é um gerenciador de pacotes, no uqal gerencia  bibliotecas que irá instalar, desinstalar e atualizar dentro do computador.

## Como instalar o pip install
Sua instalação é feita pelo terminal, utilizando o comando:

```bash
pip install nome-do-pacote

Como veremos nos exemplos a seguir.

## Exemplo de bibliotecas
Uma biblioteca é um pacote de códigos que alguém já construiu que irá ser instalado no computador para não ter que criar as coisas do zero. Diante disso, podemos citar como exemplo de bibliotecas:
- pandas: ela não vem instalada automaticamente no Python, onde só é necessário baixar uma única vez e utilizá-la da forma que preferir.

```bash
pip install pandas

Um característica do pandas é a capacidade de traduzir operações complexas com dados em um ou dois comandos.
- os e time: são bibliotecas que já vem instalada no Python.
- numpy: essencial para cálculos numéricos e científicos do Python. É ela que nos permite trabalhar com matrizes, nos oferencendo ferramentas para realizar operações matemáticas eficientes e rápidas.
Assim como o pandas o numpy para instalar é:

```bash
pip install numpy

- matplotlib: também biblioteca do Python usada para criar gráficos. Com ela, podemos fazer vários tipos de gráficos, como:

gráficos de barras,
gráficos de linhas,
gráficos de pizza,
histogramas e muito mais.

O matplotlib é muito útil para visualizar dados de forma clara. Tanto o pandas e o seaborn usam o matplotlib.

- requests: biblioteca do Python usada para acessar sites e serviços da internet. Com ela, o Python pode visitar uma página ou conversar com sistemas que enviam ou recebem dados, como as APIs.

Ela é muito útil quando queremos:

Buscar informações em um site;
Baixar dados automaticamente;
Enviar dados para outro sistema.

No entanto, para utilizar bem essas ferramentas, é essencial compreender os fundamentos da linguagem Python. A seguir, poderemos conhecer os conceitos básicos que formam a base para qualquer projeto em Python.

# Parte 6: Conceitos iniciais de Python

Criada por Guido Van Rossumem, em 1991, a linguagem de programação Python tem a finalidade de ser uma linguagem simples e de fácil compreensão. Pode ser usada para desenvolver e administrar grandes sistemas. Por se tratar de um software livre no qual permite que usuários e colaboradores possam modificar seu código fonte e compartilhar essas novas atualizações.

Uma das principais vantagens em utilizar o Python é o grande número de bibliotecas disponíveis, tais como:
 
- numpy;
- sciPy;
- pandas;
- dentre outras.

Os comentários são adicionais usando # no início da linha, enquanto que os comentários em blocos, ocupando várias linhas, podem ser definidos entre 3 aspas duplas.

Dessa forma, é importante entender os tipos de dados básicos do Python. Eles são usados para armazenar diferentes tipos de informações.

## Tipos de dados principais:
- int (inteiro): são números que não tem a vírgula, ou seja, um número que é escrito sem componente decimal, que pode ser positivo ou negativo.
Como por exemplo:
idade = 35

- float (ponto flutuante): quer dizer ponto flutuante ou decimal, composto por algarismos decimais.
Por exemplo:
altura = 1.65

- str (string): são cadeias de caracteres, assim como um conjunto de números entre aspas, por exemplo:
nome = "Kaline"
cpf = "000.111.222-33"

- bool (valor booleano): representa valores TRUE ou FALSE para alguma condição que será pedida. Tais como:
tem_bolsa = True

Ou seja, os dados são espaços na memória onde armazenar valores que servem para nomear e guardar informações que podem ser usadas posyeriormente no programa.

# Parte 7: Variáveis e operadores básicos
